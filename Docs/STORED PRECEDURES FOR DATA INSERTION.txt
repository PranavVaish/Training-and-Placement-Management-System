-------------------------------------------------------------------------------



------------------------------------------------------------------------------------

--Stored Procedure: AddTrainingProgram

DELIMITER //

CREATE PROCEDURE AddTrainingProgram(
    IN p_TrainingID INT,
    IN p_TrainingName VARCHAR(100),
    IN p_TrainingDescription TEXT,
    IN p_Duration INT,
    IN p_TrainerID INT,
    IN p_StartDate DATE,
    IN p_EndDate DATE,
    IN p_Mode VARCHAR(50),
    IN p_CertificationProvided BOOLEAN,
    IN p_TrainingCost DECIMAL(10,2)
)
BEGIN
    -- Insert into Training_Program table
    INSERT INTO Training_Program (
        Training_ID, Training_Name, Training_Description,
        Duration, Trainer_ID, Start_Date, End_Date,
        Mode, Certification_Provided, Training_Cost
    )
    VALUES (
        p_TrainingID, p_TrainingName, p_TrainingDescription,
        p_Duration, p_TrainerID, p_StartDate, p_EndDate,
        p_Mode, p_CertificationProvided, p_TrainingCost
    );
END //

DELIMITER ;

--------------------------------------------------------------------------------


--------------------------------------------------------------------------------



--------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------

-- ADD PLACEMENT RECORD

DELIMITER //

CREATE PROCEDURE AddPlacementRecord (
    IN p_Placement_ID INT,
    IN p_Student_ID INT,
    IN p_Job_ID INT,
    IN p_Company_ID INT,
    IN p_Package DECIMAL(10,2),
    IN p_Placement_Date DATE,
    IN p_Placement_Location VARCHAR(100)
)
BEGIN
    -- Check if Student, Job, and Company records exist
    IF EXISTS (SELECT 1 FROM Student WHERE Student_ID = p_Student_ID) AND
       EXISTS (SELECT 1 FROM Job WHERE Job_ID = p_Job_ID) AND
       EXISTS (SELECT 1 FROM Company WHERE Company_ID = p_Company_ID) THEN
       
        INSERT INTO Placement_Record (Placement_ID, Student_ID, Job_ID, Company_ID, Package, Placement_Date, Placement_Location)
        VALUES (p_Placement_ID, p_Student_ID, p_Job_ID, p_Company_ID, p_Package, p_Placement_Date, p_Placement_Location);
    ELSE
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid Student_ID, Job_ID, or Company_ID';
    END IF;
END //

DELIMITER ;

---------------------------------------------------------------------------------------

